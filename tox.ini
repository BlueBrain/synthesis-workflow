[base]
name = synthesis_workflow
morphval = morphval

[tox]
envlist =
    check-version
    check-packaging
    lint
    py36
    docs

minversion = 3.1.0

# ignore basepython for envs that already specify a version
ignore_basepython_conflict = true
indexserver =
    default = https://bbpteam.epfl.ch/repository/devpi/simple

[testenv]
basepython=python3.6
extras = test
commands = pytest -n 2 --basetemp={envtmpdir} --cov={envsitepackagesdir}/{[base]name} --cov={envsitepackagesdir}/{[base]morphval} --cov-branch --no-cov-on-fail --html reports/pytest-{envname}.html --self-contained-html tests/ {posargs}

[testenv:check-version]
skip_install = true
deps = bbp-nse-ci
commands = do_release.py -p . check-version

[testenv:check-packaging]
skip_install = true
deps =
    wheel
    twine
commands =
    python setup.py sdist bdist_wheel -d {envtmpdir}/dist
    twine check {envtmpdir}/dist/*

[testenv:lint]
deps =
    pycodestyle
    pydocstyle
    pylint
    black
commands =
    pycodestyle src/{[base]name}
    pycodestyle src/{[base]morphval}
    ; pydocstyle {[base]name}
    pylint src/{[base]name}
    pylint src/{[base]morphval}
    black --check src/{[base]name}
    black --check src/{[base]morphval}
    black --check tests
    black --check setup.py

[testenv:format]
skip_install = true
deps = black
commands =
    black src
    black tests
    black setup.py

[testenv:coverage]
commands =
    pytest --cov-report term-missing --cov-report xml --cov-branch --cov={envsitepackagesdir}/{[base]name} --cov={envsitepackagesdir}/{[base]morphval} tests/

[testenv:docs]
changedir = doc
extras = docs
# set warnings as errors using the -W sphinx option
commands = make html SPHINXOPTS=-W
whitelist_externals = make

# E731: do not assign a lambda expression, use a def
# W503: line break after binary operator
# W504: line break before binary operator
[pycodestyle]
ignore = E731,W503,W504,E203
max-line-length = 100

[pydocstyle]
# ignore the following
#   - D413: no blank line afer last section
add-ignore = D413
convention = google
